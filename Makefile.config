name="GPG Keychain Access"
appName="GPG Keychain Access.app"
html="keychain"
appsLink=1
imgBackground="dmgResources/Background.png"
dmgUrl="GPGTools/GPGKeychainAccess"
downloadUrlPrefix="https://github.com/downloads/GPGTools/GPGKeychainAccess/"
sshKeyname="Sparkle GPGKeychainAccess - Private key"
appPos="160, 130"
iconSize=128
localizeDir="dmgResources/localized"
volumeName="GPG Keychain Access.localized"
volumeLayout="Installer/DS_Store"
pkgProj_dir="Installer"
pkgProj_corename="GPGKeychainAccess_Core.pkgproj"
pkgProj_core="${pkgProj_dir}/${pkgProj_corename}"
build_dir="build/"

unset REVISION PRERELEASE


MAJOR=1
MINOR=0
#REVISION=1
#PRERELEASE=b8




# Versioning

# isMasterBranch: Selbsterkl√§rend (true/false)
# buildNumber: Stunden seit dem Jahr 2000 (113316)
# repoDirtyState: "+" wenn uncommited changes vorhanden sind (+/)
# commitHash: Hash des commits, eventuell dirtyState (7b24eed/7b24eed+)
# versionType: Typ der Version (/b/n)


[[ "$(git symbolic-ref -q HEAD)" == "refs/heads/master" ]] && isMasterBranch=true || isMasterBranch=false


buildNumber=$(($(date +"%s") / 3600 - 262968))
repoDirtyState=$(test -z "$(git status --porcelain)" || echo "+")
commitHash=$(git rev-parse --short HEAD)$repoDirtyState

REVISION=${REVISION:+.$REVISION}

if $isMasterBranch ;then
	unset COMMIT
	versionType=${PRERELEASE:0:1}
else
	COMMIT=" ($commitHash)"
	versionType="n"
fi


version=${MAJOR}.${MINOR}${REVISION}${PRERELEASE}${COMMIT}
version_build=${buildNumber}${versionType}
